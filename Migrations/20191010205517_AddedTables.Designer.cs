// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using capstone_0;

namespace sdgreacttemplate.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191010205517_AddedTables")]
    partial class AddedTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Capstone_0.Models.JournalModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AccountCreated");

                    b.Property<string>("ExcitedAboutToday");

                    b.Property<string>("IWouldKnowTodayIsASuccessIf");

                    b.Property<string>("LookingAtMyLifeMetaIWouldTellMyself");

                    b.Property<string>("OneActionToDemonstrateExcellence");

                    b.Property<string>("OneBoldActionToTakeToday");

                    b.Property<string>("OneWordToDescribeMeToday");

                    b.Property<string>("PersonsToConnectWithToday");

                    b.Property<string>("ProjectsToKeepInMindForFutureAre");

                    b.Property<string>("SomeoneToSurpriseWithAppreciation");

                    b.Property<string>("TasksThatMustBeDoneToday");

                    b.Property<string>("TheWayMyBestSelfWouldDealIs");

                    b.Property<string>("TodaysTopPriorities");

                    b.Property<int>("UserID");

                    b.Property<string>("WhatMightStressMeOut");

                    b.Property<string>("WhoNeedsMeOnMyAGame");

                    b.HasKey("ID");

                    b.ToTable("JournalModel");
                });

            modelBuilder.Entity("Capstone_0.Models.LongTermGoalsModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AccountCreated");

                    b.Property<string>("LongTermGoals");

                    b.Property<string>("OneYearGoals");

                    b.Property<string>("TenYearGoals");

                    b.Property<string>("ThreeYearGoals");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.ToTable("LongTermGoalsModel");
                });

            modelBuilder.Entity("Capstone_0.Models.TodoModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AccountCreated");

                    b.Property<string>("Text");

                    b.Property<int>("UserProfileModelID");

                    b.HasKey("ID");

                    b.HasIndex("UserProfileModelID");

                    b.ToTable("TodoModel");
                });

            modelBuilder.Entity("Capstone_0.Models.UserProfileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AccountCreated");

                    b.Property<string>("Email");

                    b.Property<string>("Password");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("UserProfileModel");
                });

            modelBuilder.Entity("Capstone_0.Models.TodoModel", b =>
                {
                    b.HasOne("Capstone_0.Models.UserProfileModel", "UserProfileModel")
                        .WithMany("ToDoModels")
                        .HasForeignKey("UserProfileModelID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
